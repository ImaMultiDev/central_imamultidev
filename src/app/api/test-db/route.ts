import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";

export async function GET() {
  try {
    console.log("üîç Test DB - Verificando conexi√≥n");

    // Verificar conexi√≥n b√°sica
    await prisma.$connect();
    console.log("‚úÖ Conexi√≥n a BD exitosa");

    // Verificar si las tablas existen
    const tables = await prisma.$queryRaw`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `;
    console.log("üìã Tablas encontradas:", tables);

    // Verificar tabla de cursos espec√≠ficamente
    const courseCount = await prisma.course.count();
    console.log("üìä N√∫mero de cursos en BD:", courseCount);

    // Verificar tabla de usuarios
    const userCount = await prisma.user.count();
    console.log("üë• N√∫mero de usuarios en BD:", userCount);

    return NextResponse.json({
      success: true,
      message: "Conexi√≥n a BD exitosa",
      tables,
      courseCount,
      userCount,
      databaseUrl: process.env.DATABASE_URL ? "Configurado" : "No configurado",
    });
  } catch (error) {
    console.error("‚ùå Error en test DB:", error);
    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : "Error desconocido",
        databaseUrl: process.env.DATABASE_URL
          ? "Configurado"
          : "No configurado",
      },
      { status: 500 }
    );
  } finally {
    await prisma.$disconnect();
  }
}
