// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  events        Event[]
  courses       Course[]
  documentation Documentation[]
  tools         Tool[]
  dataAnalytics DataAnalytics[]
  cloudStorage  CloudStorage[]
  generativeAI  GenerativeAI[]
  workshop      Workshop[]

  @@map("users")
}

model Event {
  id          String        @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  category    EventCategory
  isAllDay    Boolean       @default(false)
  userId      String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations (opcional en producci贸n)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("events")
}

enum EventCategory {
  TRABAJO
  PERSONAL
  ESTUDIO
  SALUD
}

model Course {
  id          String         @id @default(cuid())
  title       String
  description String?
  platform    String
  status      CourseStatus   @default(POR_COMENZAR)
  url         String?
  notes       String?
  tags        String[]
  userId      String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations (opcional en producci贸n)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("courses")
}

enum CourseStatus {
  EN_PROGRESO
  COMPLETADO
  POR_COMENZAR
}

model Documentation {
  id          String                @id @default(cuid())
  title       String
  description String?
  url         String
  type        DocumentationType
  category    DocumentationCategory
  tags        String[]
  userId      String?
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt

  // Relations (opcional en producci贸n)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("documentation")
}

enum DocumentationType {
  DOCUMENTACION_OFICIAL
  TUTORIAL
  CHEAT_SHEET
  ARTICULO
  VIDEO
}

enum DocumentationCategory {
  MULTIPLATAFORMA
  BACKEND
  BASES_DATOS
  FRONTEND
  CIENCIA_DATOS
  LENGUAJES
}

model Tool {
  id          String    @id @default(cuid())
  title       String
  description String?
  url         String
  type        ToolType
  category    ToolCategory
  tags        String[]
  userId      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations (opcional en producci贸n)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tools")
}

// Nuevos modelos para las vistas adicionales

model DataAnalytics {
  id          String              @id @default(cuid())
  title       String
  description String?
  url         String
  type        DataAnalyticsType
  category    DataAnalyticsCategory
  tags        String[]
  userId      String?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("data_analytics")
}

model CloudStorage {
  id          String            @id @default(cuid())
  title       String
  description String?
  url         String
  type        CloudStorageType
  category    CloudStorageCategory
  tags        String[]
  userId      String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("cloud_storage")
}

model GenerativeAI {
  id          String           @id @default(cuid())
  title       String
  description String?
  url         String
  type        GenerativeAIType
  category    GenerativeAICategory
  tags        String[]
  userId      String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("generative_ai")
}

model Workshop {
  id          String      @id @default(cuid())
  title       String
  description String?
  url         String
  type        WorkshopType
  category    WorkshopCategory
  tags        String[]
  userId      String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("workshop")
}

enum ToolType {
  DESPLIEGUE
  DISENO
  MULTIMEDIA
  IA_GENERATIVA
  DOCUMENTACION
  LEGAL
  DESARROLLO
  MONITOREO
  COMUNICACION
}

enum ToolCategory {
  SERVICIOS_CLOUD
  HERRAMIENTAS_DISENO
  EDITORES_MULTIMEDIA
  IA_ARTE
  IA_TEXTO
  IA_CODIGO
  PLATAFORMAS_DOCS
  SERVICIOS_LEGALES
  IDES_EDITORES
  SERVICIOS_BASE_DATOS
  AUTENTICACION
  ANALITICAS
  CHAT_COLABORACION
}

// Nuevos enums para las vistas adicionales

enum DataAnalyticsType {
  BUSINESS_INTELLIGENCE
  DATA_PROCESSING
  MACHINE_LEARNING
  DATA_VISUALIZATION
  ETL_ELT
  CLOUD_ANALYTICS
}

enum DataAnalyticsCategory {
  DASHBOARDS
  SELF_SERVICE_BI
  CLOUD_ANALYTICS
  DATA_LAKES
  ETL_ELT
  ML_PLATFORMS
  AUTOML
  MLOPS
  ADVANCED_VIZ
  STATISTICAL
}

enum CloudStorageType {
  PERSONAL_STORAGE
  HIGH_CAPACITY
  COLLABORATION
  BACKUP
  FILE_TRANSFER
  NOTE_TAKING
  HOSTING
  CLOUD_PROVIDERS
  DATABASES
  CDN
  CI_CD
  MONITORING
}

enum CloudStorageCategory {
  STORAGE_SYNC
  DEV_INFRASTRUCTURE
}

enum GenerativeAIType {
  TEXT
  CODE
  IMAGE
  AUDIO
  VIDEO
  PRODUCTIVITY
}

enum GenerativeAICategory {
  TEXT_GENERATION
  CODE_GENERATION
  IMAGE_GENERATION
  AUDIO_GENERATION
  VIDEO_GENERATION
  PRODUCTIVITY_AI
}

enum WorkshopType {
  MULTIMEDIA_EDITING
  CONVERSION
  UTILITIES
}

enum WorkshopCategory {
  IMAGES
  VIDEO
  AUDIO
  FILES
  GENERATORS
  TESTING
  ANALYSIS
} 